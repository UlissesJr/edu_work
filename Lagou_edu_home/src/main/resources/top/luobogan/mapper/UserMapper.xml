<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    <!--
        Mapper.xml映射文件中的namespace与mapper接口的全限定名相同
        Mapper接口方法名和Mapper.xml映射文件中定义的每个statement的id相同
        Mapper接口方法的输入参数类型和mapper.xml映射文件中定义的每个sql的parameterType的类型相同
        Mapper接口方法的输出参数类型和mapper.xml映射文件中定义的每个sql的resultType的类型相同
    -->
<mapper namespace="top.luobogan.mapper.UserMapper">

    <!--  根据id查询用户  resultType使用全限定类名，起了别名的话可以使用别名  -->
    <select id="findUserById" parameterType="int" resultType="top.luobogan.pojo.User">
        select * from user where id = #{id}
    </select>

    <!--  手动配置实体属性与表中字段的映射关系，完成手动封装  -->
    <!--  id：标签的唯一标识  type：封装后的实体类型  -->
    <resultMap id="userResultMap" type="top.luobogan.pojo.User">
        <!--  手动配置映射关系  -->
        <!--  id 用来配置主键  property 对应实体中的属性名 column对应数据表的字段名  -->
        <id property="id" column="id"></id>
        <!--  result就是对表中普通字段封装  -->
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>
    </resultMap>

    <select id="findAllResultMap"  resultMap="userResultMap">
        select * from user
    </select>

</mapper>